name: Build

on:
  push:
  pull_request:

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the source code
      uses: actions/checkout@v2

    - name: Validate SQF
      run: python3 tools/ci/sqf_validator.py

    - name: Validate Config
      run: python3 tools/ci/config_style_checker.py

    - name: Validate Stringtables
      run: python3 tools/ci/stringtable_validator.py

    - name: Validate Return Types
      run: python3 tools/ci/return_checker.py

    - name: Check for BOM
      uses: arma-actions/bom-check@master
  
  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust stable
        run: |
          rustup toolchain update stable --no-self-update
          rustup default stable
          rustup target install i686-unknown-linux-gnu

      - name: Install APT packages
        run: |
          sudo dpkg --add-architecture i386;
          sudo apt update
          sudo apt install libssl-dev
          sudo apt install libssl-dev:i386
          sudo apt install gcc-multilib

      - name: Build Extension
        run: PKG_CONFIG_ALLOW_CROSS=1 cargo build --target i686-unknown-linux-gnu

      - name: Test Extension
        run: PKG_CONFIG_ALLOW_CROSS=1 cargo test --target i686-unknown-linux-gnu

      - name: Build Extension (Release)
        run: PKG_CONFIG_ALLOW_CROSS=1 cargo build --release --target i686-unknown-linux-gnu

      - name: Move Extension
        run: |
          mkdir releases
          mv ./target/i686-unknown-linux-gnu/release/libbeacon.so ./beacon.so

      - name: Build with HEMTT
        uses: arma-actions/hemtt@master
        with:
          command: build --release --ci

      - name: Rename Release to System
        run: |
          mv ./releases/@beacon.zip ./@beacon_linux.zip

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: linux
          path: ./@beacon_linux.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./@beacon_linux.zip
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    name: Build (Windows)
    runs-on: windows-latest

    steps:
      - name: Checkout the source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust stable
        run: |
          rustup toolchain update stable --no-self-update
          rustup default stable

      - name: Build Extension
        run: cargo build

      - name: Test Extension
        run: cargo test

      - name: Build Extension (Release)
        run: cargo build --release

      - name: Move Extension
        shell: bash
        run: |
          mkdir ./releases
          mv ./target/release/beacon.dll ./beacon_x64.dll

      - name: Build with HEMTT
        run: |
          python tools/get_hemtt.py
          ./hemtt.exe build --release --ci

      - name: Rename Release to System
        shell: bash
        run: mv ./releases/@beacon.zip ./@beacon_windows.zip

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows
          path: ./@beacon_windows.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./@beacon_windows.zip
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
